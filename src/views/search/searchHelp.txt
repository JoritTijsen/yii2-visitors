<div id=&quot;help&quot;  class=&quot;panel outline-info collapse&quot;><div class=&quot;panel-body&quot;><table class=&quot;table table-striped table-sm&quot;><thead><tr><th>Operator</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>-</td><td>Negation</td><td>The user query &quot;smart pretty -judgmental&quot; parses to &quot;smart AND pretty AND NOT judgmental&quot;</td></tr><tr><td>()</td><td>Sub-query</td><td>Allows grouping of terms.  The user query &quot;-crazy (smart AND pretty)&quot; parses to &quot;NOT crazy AND (smart AND pretty)&quot;</td></tr><tr><td>*</td><td>Wildcard</td><td>Fuzzy matches. &quot;butt*&quot; matches butt, buttery, buttered etc.</td></tr><tr><td>_</td><td>Character wildcard</td><td>Matches one character.  &quot;boo_&quot; matches boot, book, bool, boon, etc.</td></tr><tr><td>=</td><td>Full match</td><td>Entire fields must be equal to the term.  &quot;=georgia&quot; only matches where one or more fields is exactly equal to the search term.  The search term will NOT be bracketed with %, but wildcards can still be used.</td></tr><tr><td>&quot;&quot;</td><td>Double quotes</td><td>Phrase. &#39;&quot;Super fun&quot;&#39; searches for the full phrase, space include.  Wild cards, negation and exact match operators all work within the phrase.</td></tr><tr><td>&#39;&#39;</td><td>Single quotes</td><td>Phrase, no wildcards.  The term will not be evaluated for * or _, but will be wrapped in wildcards.  If a % or _ is in the term, it will be escaped.  &#39;P%on*&#39; becomes &#39;%P%on*%&#39;.</td></tr><tr><td>:</td><td>Field</td><td>Specify the field to search.  &#39;name:jo*&#39; will search the name field for &#39;jo*.&#39; If no field name matches, all fields will be searched for &#39;name:jo*&#39;</td></tr></tbody></table></div></div>